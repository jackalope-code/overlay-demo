import { useEffect, useState } from "react";
import Overlay, { WidgetDataMap } from "./Overlay";
import { useParams, useSearchParams } from "react-router-dom";
import axios, { AxiosError } from "axios";
import { env } from "./utils";
import { useAuth } from "./header-auth";

const routeUrl = env().routeUrl;


const OverlayViewPage = () => {
  // TODO: lifted state
  const [overlayDimensions, setOverlayDimensions] = useState({width: 1920, height: 1080});
  const [widgetDataMap, setWidgetDataMap] = useState<WidgetDataMap>({});

  const [searchParams] = useSearchParams();
  
  const {clientId, isAuthenticated, authFailed, authFailMessage, authenticate} = useAuth();
  const [errorMessage, setErrorMessage] = useState("");

  useEffect(() => {
    let username = searchParams.get("username");
    let password = searchParams.get("password");
    console.log(username, password)
    if(!username || !password) {
      setErrorMessage("Please authenticate from the URL generated by the editor.")
      console.log('set error message')
      console.log('client id', clientId)
      return;
    }
    authenticate(username, password);
  }, []);

  function renderAuthFailMessage() {
    return <h2 style={{color: "red"}}>Not authenticated. {errorMessage}</h2>
  }

  return (
    clientId !== undefined ?
      <Overlay
        dimensions={overlayDimensions}
        widgetDataMap={widgetDataMap}
        setWidgetDataMap={setWidgetDataMap}
        setDimensions={setOverlayDimensions}
        clientId={clientId}
        style={{overflow: "hidden"}}
      />
      :
      <>
        {renderAuthFailMessage()}
      </>
  )
}

export default OverlayViewPage;
